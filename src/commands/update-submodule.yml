description: >
  Update the submodule and push it with [skip ci].
# What will this command do?
# Descriptions should be short, simple, and clear.
parameters:
  module-name:
    type: string
    description: "Submodule name to be updated."
  submodule-fingerprint:
    type: string
    description: "Fingerprint with read access to the submodule repository to be updated."
  master-fingerprint:
    type: string
    description: "fingerprint with write access to push changes in the submodule to the repository."
  commit-message:
    type: string
    default: "[skip ci] update submodule"
    description: "The commit message when the submodule is pushed."

steps:
  - run:
      name: set env
      command: |
        echo "export SUBMODULE_FINGERPRINT=`eval echo << parameters.submodule-fingerprint >>`" >> $BASH_ENV
        echo "export MASTER_FINGERPRINT=`eval echo << parameters.master-fingerprint >>`" >> $BASH_ENV
  - run:
      name: confirm
      command: |
        echo ${SUBMODULE_FINGERPRINT}
        echo ${MASTER_FINGERPRINT}
  - add_ssh_keys:
      fingerprints:
        - ${SUBMODULE_FINGERPRINT}
        - ${MASTER_FINGERPRINT}
  - run:
      name: update submodule
      command: |
        if [ -n << parameters.module-name >> ]; then
          module_name=$(eval echo << parameters.module-name >>)
          commit_message=$(eval echo << parameters.commit-message >>)

          ls ~/.ssh/

          _key=$(echo ${SUBMODULE_FINGERPRINT} | sed -e 's/://g')
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_${_key}"
          git config --global user.email "submodule.updater@rhems-japan.co.jp"
          git config --global user.name "submodule-updater"
          git submodule update --init --remote --recursive << parameters.module-name >>
          git status

          _key=$(echo ${MASTER_FINGERPRINT} | sed -e 's/://g')
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_${_key}"

          git commit -a -m "${commit_message}" || true
          git push -u origin ${CIRCLE_BRANCH}
        else
          echo "target not found."
        fi
